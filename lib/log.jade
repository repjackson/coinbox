template(name='logs')
    .ui.stackable.padded.grid 
        .four.wide.column
            .ui.inline.header 
                +i name='blog'
                |blog
            if currentUser
                .ui.icon.circular.button.add_log
                    // i.plus.large.icon
                    +i name='plus'
            .ui.compact.button.toggle_yours
                if viewing_yours
                    i.undo.green.icon
                else
                    i.circle.outline.icon
                |yours
            +facet key='tag'
        .twelve.wide.column
            +session_set key='view_mode' value='cards' icon='th'
            +session_set key='view_mode' value='list' icon='list'
            i.large.sort.icon
            +session_set key='sort_key' value='_timestamp' label='added' icon='clock'
            +session_set key='sort_key' value='points' label='points' icon='hashtag'
            .scrolling
                if subs_ready
                    if session_is 'view_mode' 'cards'
                        .ui.centered.stackable.cards
                            each model_docs 'log' 
                                +log_card
                    else 
                        .ui.divided.animated.selection.list
                            each model_docs 'log' 
                                +log_item
                else
                    i.massive.yin.yang.loading.icon



template(name='log_card')
    .ui.link.card.view_log.pointer.fly_right
        if youtube_id 
            +youtube_view key='youtube_id'
        else if image_id
            img.ui.fluid.rounded.image(src="{{c.url image_id height=200 width=400 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .content
            a.ui.header.zoomer(href="/log/#{_id}") #{title}
            if private 
                i.large.lock.icon
            .ui.small.grey.inline.header #{when}
            .smallscroll
                | !{content}
            // +comments_view_small
            +author_info
            if group_id     
                +group_info
            
        
template(name='log_item')
    .ui.fluid.segment.view_log.pointer
        if youtube_id 
            +youtube_view key='youtube_id'
        else if image_id    
            img.ui.fluid.rounded.image(src="{{c.url image_id gravity='face' crop='fill'}}" class=currentUser.invert_class)
        a.ui.header(href="/log/#{_id}/view") #{title}
        div
        .ui.small.grey.inline.header #{when}
        .smallscroll
            | !{content}
        each tags 
            .ui.basic.small.label #{this}
        .item
            img.ui.avatar.image(src="{{c.url _author.image_id height=100 width=200}}" class=currentUser.invert_class)
            .content
                .header
                    |#{when} from #{_author.name}
                .description
                    |#{description} #{body}
                    a.ui.icon.button(href="/message/#{_id}")
                        i.chevron.right.icon
                    +viewing
                    |last viewed {{from_now last_viewed}}
                    | {{views}} views
                    if can_edit
                        +remove_icon
                    if is_dev
                        +print_this
  

template(name='log_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .four.wide.column.scrolling
                    a.ui.large.button(href="/logs" title='logs')
                        i.chevron.left.icon
                        +i name='event-log'
                        |logs
                    if can_edit
                        a.ui.circular.icon.button.fly_down(href="/log/#{_id}/edit" title='edit')
                            +i name='pencil'
                    +author_info
                    // .ui.segment
                    //     .ui.header 
                    //         small author
                    //     a.ui.header(href="/user/#{_author.username}") 
                    //         img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                    //         |#{_author.username}
                    +viewing_info
                    +array_view key='tags' label='tags' direct=true
                    +voting_full
                    +array_view key='location_tags' label='location_tags' direct=true
                    +visibility_settings
                    // +group_widget
                .ten.wide.column.scrolling
                    .ui.header #{title}
                    img.ui.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                    // a.ui.header(href="/user/#{target.username}")
                    //     |#{target.username}
                    |!{content}
                    if watson 
                        +watson_view
                    div 
                    .spacer
                    .spacer
                    if youtube_id 
                        +youtube_view key='youtube_id'
                    +comments
                .two.wide.column
                    
                // .four.wide.column
                
                    //- .ui.fluid.green.button.submit
                    //-     i.checkmark.icon
                    //-     |submit